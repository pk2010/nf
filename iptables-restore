#!/usr/bin/php
<?php
$curport=0;
$mapflag=0;
@unlink("root/nf/.cache");

$descriptorspec = array(
   0 => array("pipe", "r"),
   1 => array("pipe", "w")
);

$process = proc_open("xtables-multi iptables-restore", $descriptorspec, $pipes);
$stdin = fopen('php://stdin', 'r');
$cachefile = fopen("/root/nf/.cache",'w');
if(!is_resource($process) || !is_resource($stdin) || !is_resource($cachefile)) {echo "Something Unexpected happened\n";goto cls;}

    while (($buffer = fgets($stdin, 4096)) !== false) {
	fwrite($pipes[0],$buffer);
        if(strpos($buffer,' PREROUTING')!==false){
		$barr=explode(" ",$buffer);

		if($barr[9] != $curport){
			if($curport!=0) {fwrite($cachefile,"\n");$mapflag=1;}
			$curport=$barr[9]+0;
			$dr=explode(":",$barr[17]);
			fwrite($cachefile,$barr[9]." ".$dr[0]." ".trim($dr[1])." ".$barr[13]." 0 ".$barr[3]);
		}
		else fwrite($cachefile," ".$barr[3]);	
	}
    }
    if (!feof($stdin)) {
        echo "Error: unexpected fgets() fail\n";
    }
cls:
if(is_resource($pipes[0]))fclose($pipes[0]);
if(is_resource($pipes[1]))fclose($pipes[1]);
if(is_resource($process))proc_close($process);
if(is_resource($stdin))fclose($stdin);
if(is_resource($cachefile))fclose($cachefile);
if($mapflag!=0) exec("/root/nf/cli/pkfmap /root/nf/.cache");

//Do it always
exec("sysctl -w net.netfilter.nf_conntrack_tcp_timeout_time_wait=1");
?>
